'\" t
.\"     Title: dmdbctl
.\"    Author: Philipp Engel
.\" Generator: Asciidoctor 2.0.23
.\"      Date: 2025-08-26
.\"    Manual: User Commands
.\"    Source: DMDBCTL
.\"  Language: English
.\"
.TH "DMDBCTL" "1" "2025-08-26" "DMDBCTL" "User Commands"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
dmdbctl \- command\-line interface to DMPACK observation databases
.SH "SYNOPSIS"
.sp
\fBdmdbctl\fP \-\-help
.sp
\fBdmdbctl\fP \-\-version
.sp
\fBdmdbctl\fP \-\-\fBdatabase\fP \fIfile\fP \-\-\fBid\fP \fIid\fP
[\-\-\fBcreate\fP|\-\-\fBread\fP|\-\-\fBupdate\fP|\-\-\fBdelete\fP \fItype\fP] [\-\-\fBname\fP \fIname\fP]
[\-\-\fBmeta\fP \fImeta\fP] [\-\-\fBnode\fP \fIid\fP] [\-\-\fBtype\fP \fIsensor\fP] [\-\-\fBsn\fP \fIsn\fP]
[\-\-\fBstate\fP \fIn\fP] [\-\-\fBx\fP \fIx\fP] [\-\-\fBy\fP \fIy\fP] [\-\-\fBz\fP \fIz\fP] [\-\-\fBlongitude\fP \fIlon\fP]
[\-\-\fBlatitude\fP \fIlat\fP] [\-\-\fBelevation\fP \fIelev\fP] [\-\-\fBverbose\fP]
.SH "DESCRIPTION"
.sp
The \fBdmdbctl\fP utility program performs create, read, update, or delete
operations on the observation database:
.sp
Create
.RS 4
Add nodes, sensors, and targets to the database.
.RE
.sp
Read
.RS 4
Read nodes, sensors, and targets from database. Print the records to standard
output.
.RE
.sp
Update
.RS 4
Update nodes, sensors, and targets in the database.
.RE
.sp
Delete
.RS 4
Delete nodes, sensors, and targets from the database.
.RE
.sp
Only nodes, sensors, and targets are supported. All data attributes are passed
through command\-line arguments.
.SH "OPTIONS"
.sp
\fB\-\-create\fP, \fB\-C\fP [node|sensor|target]
.RS 4
Create database record (node, sensor, or target).
.RE
.sp
\fB\-\-database\fP, \fB\-d\fP \fIfile\fP
.RS 4
Path to SQLite observation database.
.RE
.sp
\fB\-\-delete\fP, \fB\-D\fP [node|sensor|target]
.RS 4
Delete database record (node, sensor, or target).
.RE
.sp
\fB\-\-elevation\fP, \fB\-E\fP \fIelev\fP
.RS 4
Elevation of node, sensor, or target in metres.
.RE
.sp
\fB\-\-help\fP, \fB\-h\fP
.RS 4
Print available command\-line arguments and quit.
.RE
.sp
\fB\-\-id\fP, \fB\-I\fP \fIid\fP
.RS 4
ID of node, sensor, or target.
.RE
.sp
\fB\-\-latitude\fP, \fB\-L\fP \fIlat\fP
.RS 4
Latitude of node, sensor, or target in degrees (decimal).
.RE
.sp
\fB\-\-longitude\fP, \fB\-G\fP \fIlon\fP
.RS 4
Longitude node, sensor, or target in degrees (decimal).
.RE
.sp
\fB\-\-meta\fP, \fB\-M\fP \fImeta\fP
.RS 4
Meta description of node, sensor, or target.
.RE
.sp
\fB\-\-name\fP, \fB\-n\fP \fIname\fP
.RS 4
Name of node, sensor, or target.
.RE
.sp
\fB\-\-node\fP, \fB\-N\fP \fIid\fP
.RS 4
ID of the node the sensor is attached to.
.RE
.sp
\fB\-\-read\fP, \fB\-R\fP [node|sensor|target]
.RS 4
Read database record (node, sensor, or target).
.RE
.sp
\fB\-\-sn\fP, \fB\-Q\fP \fIsn\fP
.RS 4
Serial number of sensor.
.RE
.sp
\fB\-\-state\fP, \fB\-S\fP \fIn\fP
.RS 4
Target state.
.RE
.sp
\fB\-\-type\fP, \fB\-t\fP \fIsensor\fP
.RS 4
Sensor type, for example, \f(CRnone\fP, \f(CRfs\fP, \f(CRprocess\fP, or \f(CRtps\fP.
.RE
.sp
\fB\-\-update\fP, \fB\-U\fP [node|sensor|target]
.RS 4
Update database record (node, sensor, or target).
.RE
.sp
\fB\-\-verbose\fP, \fB\-V\fP
.RS 4
Print log messages to \fIstderr\fP.
.RE
.sp
\fB\-\-version\fP, \fB\-v\fP
.RS 4
Print version information and quit.
.RE
.sp
\fB\-\-x\fP, \fB\-X\fP \fIx\fP
.RS 4
Node, sensor, or target x, usually in metres. May be in local or global
coordinate system.
.RE
.sp
\fB\-\-y\fP, \fB\-Y\fP \fIz\fP
.RS 4
Node, sensor, or target z, usually in metres. May be in local or global
coordinate system.
.RE
.sp
\fB\-\-z\fP, \fB\-Z\fP \fIz\fP
.RS 4
Node, sensor, or target z, usually in metres. May be in local or global
coordinate system.
.RE
.SH "EXIT STATUS"
.sp
\fB0\fP
.RS 4
Success.
Database operation finished without error.
.RE
.sp
\fB1\fP
.RS 4
Failure.
Database operation failed.
.RE
.SH "EXAMPLE"
.sp
Add a new node of id \f(CRnode\-1\fP to the database:
.sp
.if n .RS 4
.nf
.fam C
$ dmdbctl \-d observ.sqlite \-C node \-I node\-1 \-n "Node 1"
.fam
.fi
.if n .RE
.sp
Delete target \f(CRtarget\-1\fP from database:
.sp
.if n .RS 4
.nf
.fam C
$ dmdbctl \-d observ.sqlite \-D target \-I target\-1
.fam
.fi
.if n .RE
.sp
Update the meta description of sensor \f(CRsensor\-1\fP:
.sp
.if n .RS 4
.nf
.fam C
$ dmdbctl \-d observ.sqlite \-U sensor \-I sensor\-1 \-M "in service"
.fam
.fi
.if n .RE
.SH "SEE ALSO"
.sp
\fIdmdb(1)\fP, \fIdminit(1)\fP
.SH "AUTHOR"
.sp
Philipp Engel