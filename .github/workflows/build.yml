name: Build and Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04 ]
    env:
      GCC_V: 13
      SQLITE_V: '3450100'

    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Dependencies (Linux)
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-${GCC_V} gfortran-${GCC_V} make pkg-config
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_V} 100 \
          --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-${GCC_V}
        sudo apt-get install -y --no-install-recommends libblas-dev liblapack-dev \
          curl libcurl4 libcurl4-openssl-dev libfcgi-bin libfcgi-dev gnuplot \
          libhdf5-103-1 libhdf5-dev lua5.4 liblua5.4 liblua5.4-dev libpcre2-8-0 \
          libpcre2-dev zlib1g zlib1g-dev

    - name: Build and Install SQLite 3 (Linux)
      uses: actions/checkout@v3
      if: contains(matrix.os, 'ubuntu')
      run: |
        git config --global url.https://github.com/.insteadOf git://github.com/
        git clone --depth 1 https://github.com/sqlite/sqlite.git
        cd sqlite/
        ./configure
        make install

    - name: Build and Test (Linux)
      if: contains(matrix.os, 'ubuntu')
      run: |
        which gfortran
        gfortran --version
        which gcc
        gcc --version
        make linux_debug
        sh runtests.sh
